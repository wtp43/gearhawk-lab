apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-server
  annotations:
    argocd.argoproj.io/sync-wave: "2"
    argocd.argoproj.io/sync-options: Force=true,Replace=true
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vllm-server
  template:
    metadata:
      labels:
        app: vllm-server
    spec:
      runtimeClassName: nvidia
      nodeSelector:
        kubernetes.io/hostname: work-00
      volumes:
        - name: huggingface-cache
          persistentVolumeClaim:
            claimName: huggingface-cache-pvc
        # vLLM needs to access the host's shared memory for tensor parallel inference.
        - name: shm
          emptyDir:
            medium: Memory
            sizeLimit: "2Gi"
      containers:
        - name: vllm-server
          image: vllm/vllm-openai:latest
          command: ["/bin/sh", "-c"]
          args:
            [
              "vllm serve OpenGVLab/InternVL3_5-4B --trust-remote-code --enable-chunked-prefill --max-model-len 26000 --max-num-batched-tokens 26000 --gpu-memory-utilization 0.95",
            ]
          env:
            - name: HUGGING_FACE_HUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: huggingface-token
                  key: HUGGING_FACE_HUB_TOKEN
            - name: MODEL_NAME
              valueFrom:
                secretKeyRef:
                  name: vllm-model
                  key: MODEL_NAME
          ports:
            - containerPort: 8000
          resources:
            limits:
              cpu: "10"
              memory: 20G
              nvidia.com/gpu: "1"
            requests:
              cpu: "2"
              memory: 6G
              nvidia.com/gpu: "1"
          volumeMounts:
            - mountPath: /root/.cache/huggingface
              name: huggingface-cache
            - name: shm
              mountPath: /dev/shm
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: 8000
          #   initialDelaySeconds: 60
          #   periodSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: 8000
          #   initialDelaySeconds: 60
          #   periodSeconds: 5
