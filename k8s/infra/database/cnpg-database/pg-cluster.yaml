apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres-cluster
  namespace: cnpg-database
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  imageName: ghcr.io/cloudnative-pg/postgresql:17.5
  imagePullPolicy: IfNotPresent
  instances: 3
  startDelay: 300
  stopDelay: 300
  primaryUpdateStrategy: unsupervised

  postgresql:
    # TODO: performance tuning https://www.enterprisedb.com/postgres-tutorials/introduction-postgresql-performance-tuning-and-optimization?lang=en
    parameters:
      timezone: "Canada/Eastern"
      shared_buffers: 8192MB
      work_mem: 64MB
      effective_cache_size: 16384MB
      pg_stat_statements.max: "10000"
      pg_stat_statements.track: all
      auto_explain.log_min_duration: "10s"
    pg_hba:
      # - host all all 10.244.0.0/16 md5
      - host all all all md5

  bootstrap:
    # initdb:
    #   database: postgres
    #   owner: app
    #   secret:
    #     name: gearhawk-postgres-app
    recovery:
      source: s3
      database: postgres
      owner: app
      secret:
        name: gearhawk-postgres-app

  enableSuperuserAccess: true
  superuserSecret:
    name: gearhawk-postgres-superuser

  storage:
    # TODO: benchmark and use local storage
    storageClass: longhorn
    size: 10Gi

  managed:
    roles:
      - name: gearhawk-pipeline-worker
        ensure: present
        login: true
        superuser: false
        createdb: true
        createrole: false
        inherit: false
        replication: false
        bypassrls: false
        passwordSecret:
          name: gearhawk-pipeline-worker
  externalClusters:
    - name: s3
      plugin:
        name: barman-cloud.cloudnative-pg.io
        parameters:
          # Recovery Object Store (pull, read-only)
          barmanObjectName: s3-store
          serverName: recovery-target # the target path where base + wal objects are stored, take second last base + all wal
  plugins:
    - name: barman-cloud.cloudnative-pg.io
      isWALArchiver: true
      parameters:
        # Backup Object Store (push, read-write)
        barmanObjectName: s3-store
        serverName: scheduled-backup # this s3 path must be empty during recovery

  resources:
    requests:
      memory: "32Gi"
      cpu: "4"
    limits:
      memory: "64Gi"
      cpu: "8"
  monitoring:
    enablePodMonitor: true
  # TODO:
  # affinity:
  #   enablePodAntiAffinity: true
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                  - work-00

  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: false
